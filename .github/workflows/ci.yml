name: Tests and release

# Copied from https://github.com/houseabsolute/precious/blob/master/.github/workflows/ci.yml

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "hubuum-*"
  pull_request:

env:
  CRATE_NAME: hubuum
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/hubuum_rust_test
  HUBUUM_DATABASE_URL: postgres://postgres:postgres@localhost:5432/hubuum_rust_test
  HUBUU_DB_TEST_PASSWORD: postgres

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: hubuum
            name: hubuum-Linux-x86_64-musl.tar.gz
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: hubuum
            name: hubuum-Linux-x86_64-gnu.tar.gz
          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: hubuum
            name: hubuum-Linux-aarch64-gnu.tar.gz
          - os_name: Linux-arm
            os: ubuntu-20.
            target: arm-unknown-linux-gnueabi
            bin: hubuum
            name: hubuum-Linux-arm-gnu.tar.gz
          - os_name: Linux-i686
            os: ubuntu-20.04
            target: i686-unknown-linux-gnu
            bin: hubuum
            name: hubuum-Linux-i686-gnu.tar.gz
            skip_tests: true
#          - os_name: Linux-powerpc
#            os: ubuntu-20.04
#            target: powerpc-unknown-linux-gnu
#            bin: hubuum
#            name: hubuum-Linux-powerpc-gnu.tar.gz
#            skip_tests: true
#          - os_name: Linux-powerpc64
#            os: ubuntu-20.04
#            target: powerpc64-unknown-linux-gnu
#            bin: hubuum
#            name: hubuum-Linux-powerpc64-gnu.tar.gz
#            skip_tests: true
          - os_name: Linux-powerpc64le
            os: ubuntu-20.04
            target: powerpc64le-unknown-linux-gnu
            bin: hubuum
            name: hubuum-Linux-powerpc64le.tar.gz
            skip_tests: true
#          - os_name: Linux-riscv64
#            os: ubuntu-20.04
#            target: riscv64gc-unknown-linux-gnu
#            bin: hubuum
#            name: hubuum-Linux-riscv64gc-gnu.tar.gz
          - os_name: Linux-s390x
            os: ubuntu-20.04
            target: s390x-unknown-linux-gnu
            bin: hubuum
            name: hubuum-Linux-s390x-gnu.tar.gz
            skip_tests: true
#          - os_name: NetBSD-x86_64
#            os: ubuntu-20.04
#            target: x86_64-unknown-netbsd
#            bin: hubuum
#            name: hubuum-NetBSD-x86_64.tar.gz
#            skip_tests: true
          # - os_name: Windows-aarch64
          #   os: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   bin: hubuum.exe
          #   name: hubuum-Windows-aarch64.zip
          #   skip_tests: true
          # - os_name: Windows-i686
          #   os: windows-latest
          #   target: i686-pc-windows-msvc
          #   bin: hubuum.exe
          #   name: hubuum-Windows-i686.zip
          #   skip_tests: true
          # - os_name: Windows-x86_64
          #   os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   bin: hubuum.exe
          #   name: hubuum-Windows-x86_64.zip
          # - os_name: macOS-x86_64
          #   os: macOS-latest
          #   target: x86_64-apple-darwin
          #   bin: hubuum
          #   name: hubuum-Darwin-x86_64.tar.gz
          # - os_name: macOS-aarch64
          #   os: macOS-latest
          #   target: aarch64-apple-darwin
          #   bin: hubuum
          #   name: hubuum-Darwin-aarch64.tar.gz
          #   skip_tests: true
        toolchain:
          - stable
          - beta
          - nightly
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Docker debugging
        run: |
          docker ps -a
          docker container ls
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Set up database
        run: |
          cargo install diesel_cli --no-default-features --features postgres
          echo "Creating database"
          PGPASSWORD=postgres createdb -U postgres -h localhost -p 5432 hubuum_rust_test
          echo "Running database setup and migrations"
          diesel migration run --database-url ${{ env.DATABASE_URL }}
          echo "Checking database setup"
          PGPASSWORD=postgres psql -U postgres -h localhost -p 5432 -d hubuum_rust_test -c "select * from users;"
      - name: Configure Git
        run: |
          git config --global user.email "terje@kvernes.no"
          git config --global user.name "Terje Kvernes"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Install database libraries on Linux
        run: |
          sudo apt-get update --yes
          sudo apt-get install --yes libsqlite3-dev libmysqlclient-dev libpq-dev
        if: contains(matrix.platform.os, 'ubuntu')
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true
      - name: Run tests      
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "test"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
        if: ${{ !matrix.platform.skip_tests }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
        if: |
          matrix.toolchain == 'stable' &&
          ( startsWith( github.ref, 'refs/tags/v' ) ||
            github.ref == 'refs/tags/test-release' )
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hubuum-${{ matrix.platform.os_name }}
          path: "hubuum-*"
        if: matrix.toolchain == 'stable' && github.ref == 'refs/tags/test-release'
      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}
        if: |
          matrix.toolchain == 'stable' &&
          matrix.platform.os == 'macOS-latest' &&
          ( startsWith( github.ref, 'refs/tags/v' ) ||
            github.ref == 'refs/tags/test-release' )
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "hubuum-*"
          body_path: Changes.md
        if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )
